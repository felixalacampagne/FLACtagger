<?xml version="1.0" encoding="utf-8"?>
<jxb:bindings xmlns:xs="http://www.w3.org/2001/XMLSchema"
              xmlns:jxb="http://java.sun.com/xml/ns/jaxb"
              jxb:version="1.0"> 
<jxb:bindings schemaLocation="lyrics.xsd">
<jxb:schemaBindings>
   <jxb:package name="com.smallcatutilities.flactagger.generated.lyrics" ></jxb:package>
</jxb:schemaBindings>

<!-- Forking hell this xjb stuff is a true heap of shirt. Not only does the schema need to be
     specified IN the xjb AND as a parameter to xjc but changing the name used the generated Types 
     doesn't work.
     OK. My bad. The xjb is so incomprehensible that I didn't realise that "javaType" is something 
     for change the way the basic types are mapped, eg. xs:string->String, xs:dat->Date.
     To change the name of the generated types/classes requires the "class binding". This
     is also a true piece of shirt: It requires an Xpath into the xsd for the type definition.
     In other words it probably make more sense to get rid of the XxxxType names and use the
     desired Java names directly.
--> 

   <jxb:bindings node="//xs:complexType[@name='lyricsType']">
      <jxb:class name="Lyrics" />
   </jxb:bindings>
   <jxb:bindings node="//xs:complexType[@name='directoryType']">
      <jxb:class name="Directory" />
   </jxb:bindings>
   <jxb:bindings node="//xs:complexType[@name='fileType']">
      <jxb:class name="MetaFile" />
   </jxb:bindings>
   <jxb:bindings node="//xs:complexType[@name='filesType']">
      <jxb:class name="MetaFiles" />
   </jxb:bindings>
 
</jxb:bindings>
</jxb:bindings>
